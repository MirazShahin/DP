#include <bits/stdc++.h>
using namespace std; 
using ll = long long;
int const MOD = 1e9 + 7; 
 
void solve() {
    int n; cin >> n;
    char grid[n][n];
    for(int i = 0; i < n; i++ ) {
        for(int j = 0; j < n; j++ ) {
            cin >> grid[i][j];
        }
    }
    int dp[n][n];
    memset(dp, 0, sizeof(dp));
    if(grid[0][0] == '*' ) {
        cout << 0 << '\n';
        return;
    }
    dp[0][0] = 1;
    for(int i = 0; i < n; i++ ) {
        for(int j = 0; j < n; j++ ) {
            if(grid[i][j] == '*') {
                dp[i][j] = 0;
            }
            else {
                if(i > 0) dp[i][j] = (dp[i][j] + dp[i - 1][j]) % MOD;
                if(j > 0) dp[i][j] = (dp[i][j] + dp[i][j - 1]) % MOD;
            }
        }
    }
    cout << dp[n - 1][n - 1] << '\n';
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0); 
    int test_case = 1;
    //cin >> test_case;
    int i = 1;
    while(test_case-- ) {
        //cout << "Case " << i << ": ";
        solve();
        i++;
    }
 
    return 0;
}
